server {

	listen 443 ssl http2;
	server_name storage.vpdb.io;

	# path to your certs and chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_certificate         /etc/letsencrypt/live/vpdb.io/fullchain.pem;
	ssl_certificate_key     /etc/letsencrypt/live/vpdb.io/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/vpdb.io/chain.pem;

	# logs
	error_log /var/log/nginx/storage.vpdb.io-error.log;
	access_log /var/log/nginx/storage.vpdb.io-access.log extended;

	# letsencrypt challenge
	include /etc/nginx/snippets/letsencrypt.nginx;

	# map public assets (to be removed in favor of preview.?)
	location /public/files {
		alias /var/data/storage-public;
		add_header Cache-Control "no-transform,public,max-age=2592000" always;
		etag on;
		try_files $uri @fallback;
	}

	location @fallback {
		rewrite (.*) /storage$1 break;
		proxy_pass http://localhost:4004;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_cache_bypass $http_upgrade;
		proxy_hide_header X-User-Id;

		# logs
		error_log /var/log/nginx/storage-api.vpdb.io-error.log;
		access_log /var/log/nginx/storage-api.vpdb.io-access.log extended;
	}

	# this goes to node
	location / {

		client_max_body_size 500M;
		add_header Cache-Control "private,max-age=0,no-cache,no-store" always;

		# reverse proxy settings
		proxy_pass http://localhost:4004/storage/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_cache_bypass $http_upgrade;
		proxy_request_buffering off;
		proxy_hide_header X-User-Id;

		# cors is handled by node. adding it here will set the origin twice, which will fail cors requests.

		# logs
		error_log /var/log/nginx/storage-api.vpdb.io-error.log;
		access_log /var/log/nginx/storage-api.vpdb.io-access.log extended;
	}
}

# redirect to https
server {
	listen 80;
	server_name storage.vpdb.io;
	return 301 https://storage.vpdb.io$request_uri;
}
